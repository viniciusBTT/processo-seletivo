{"version":3,"file":"components/cookiebar/cookiebar.min.js","mappings":"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","sources":["webpack://core/webpack/universalModuleDefinition","webpack://core/webpack/bootstrap","webpack://core/webpack/runtime/define property getters","webpack://core/webpack/runtime/hasOwnProperty shorthand","webpack://core/./src/components/cookiebar/cookiebar.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory();\n\telse\n\t\troot[\"core\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import Checkgroup from '../../partial/js/behavior/checkgroup'\nimport { CookiebarData } from './cookiebar-data'\nimport { CookiebarTemplates } from './cookiebar-templates'\nimport * as selectors from './selectors'\n\n/** Classe para instanciar um objeto cookiebar */\nexport default class BRCookiebar {\n  /**\n   * Instancia um objeto cookiebar\n   * @param {object} objeto - Objeto para destructuring com as propriedades abaixo\n   * @property {string} name - Nome do componente em minúsculo (br-cookiebar)\n   * @property {object} component - Objeto referenciando a raiz do componente DOM\n   * @property {string} json - JSON de entrada com dados do cookiebar\n   * @property {string} lang - Lingua para filtrar o JSON de entrada\n   * @property {string} mode - Mode de renderização do cookibar ('default' | 'open')\n   * @property {function} callback - Chamada no aceite do cookiebar com o JSON de saída como argumento\n   */\n  constructor({ name, component, json, lang, mode = 'default', callback }) {\n    this.name = name\n    this.component = component\n    this.data = new CookiebarData(json, lang)\n    this.templates = new CookiebarTemplates(this.data)\n    this.mode = mode\n    this.callback = callback\n    this._setUp()\n  }\n\n  /**\n   * Controla a instanciação do cookiebar\n   * @private\n   */\n  _setUp() {\n    this._buildCookiebar()\n    this._setBehavior()\n    this._showCookiebar()\n  }\n\n  /**\n   * Controla a construção do cookiebar com o uso de templates\n   * @private\n   */\n  _buildCookiebar() {\n    this.component.innerHTML = this.templates.setGlobalContentArea()\n  }\n\n  /**\n   * Controla o comportamento dos itens interativos do cookiebar\n   * @private\n   */\n  _setBehavior() {\n    this._setAcceptButtonBehavior()\n    this._setPoliticsButtonBehavior()\n    this._setCloseButtonBehavior()\n    this._setToggleGroupBehavior()\n    this._setCheckboxBehavior()\n    this._setSelectionBehavior()\n    this._setWindowResizeBehavior()\n  }\n\n  /**\n   * Trata o comportamento do botão de aceite do cookiebar\n   * @private\n   */\n  _setAcceptButtonBehavior() {\n    const acceptButton = this.component.querySelector(selectors.ACCEPT_BUTTON)\n\n    // Trata o aceite do cookiebar\n    acceptButton.addEventListener('click', () => {\n      this._hideCookiebar()\n      // this._resetCookiebar()\n      document.body.style.overflowY = 'auto'\n      this.callback(this._setOutputJSON())\n    })\n\n    // (Navegação por teclado) Mantém o foco no cookiebar quando ele está aberto\n    acceptButton.addEventListener('keydown', (event) => {\n      if (event.key === 'Tab') {\n        if (!this.component.classList.contains('default')) {\n          this.component.focus()\n        }\n      }\n    })\n\n    this._setActionButtonResponsive(acceptButton)\n  }\n\n  /**\n   * Trata o comportamento do botão de políticas/definições de cookies\n   * @private\n   */\n  _setPoliticsButtonBehavior() {\n    this.component\n      .querySelectorAll(selectors.POLITICS_BUTTON)\n      .forEach((politicsButton) => {\n        // Expande o cookiebar\n        politicsButton.addEventListener('click', () => {\n          politicsButton.classList.add('d-none')\n          this.component.classList.remove('default')\n          this.component.focus()\n          document.body.style.overflowY = 'hidden'\n          this._setOpenView()\n        })\n\n        this._setActionButtonResponsive(politicsButton)\n      })\n  }\n\n  /**\n   * Trata o comportamento do botão de fechar do cookiebar no modo open\n   * @orivate\n   */\n  _setCloseButtonBehavior() {\n    this.component\n      .querySelectorAll(selectors.CLOSE_BUTTON)\n      .forEach((closeButton) => {\n        // encolhe o cookiebar (volta ao cookiebar default)\n        closeButton.addEventListener('click', () => {\n          this.component.classList.add('default')\n          switch (this.mode) {\n            case 'open':\n              this._hideCookiebar()\n            // this._resetCookiebar()\n            default:\n          }\n\n          this.component\n            .querySelector(selectors.POLITICS_BUTTON)\n            .classList.remove('d-none')\n          document.body.style.overflowY = 'auto'\n\n          this._setDefaultView()\n        })\n      })\n  }\n\n  /**\n   * Trata o redimensionamento da tela\n   * @private\n   */\n  _setWindowResizeBehavior() {\n    window.addEventListener('resize', () => {\n      if (!this.component.classList.contains('default')) {\n        this._setOpenView()\n      }\n      this.component\n        .querySelectorAll(selectors.ACTION_BUTTONS)\n        .forEach((button) => {\n          this._setActionButtonResponsive(button)\n        })\n    })\n  }\n\n  /**\n   * Trata a responsividade de um botão de ação baseado na largura da tela\n   * @param {object} button - Elemento DOM que representa um botão de ação\n   * @private\n   */\n  _setActionButtonResponsive(button) {\n    if (window.matchMedia('(max-width: 574px)').matches) {\n      button.classList.add('block')\n    }\n    if (window.matchMedia('(min-width: 575px)').matches) {\n      button.classList.remove('block')\n    }\n  }\n\n  /**\n   * Trata a abertura/fechamento do grupo de cookies\n   * @private\n   */\n  _setToggleGroupBehavior() {\n    this.component\n      .querySelectorAll(\n        `${`${selectors.GROUP_BUTTON}, ${selectors.GROUP_NAME}, ${selectors.COOKIES_CHECKED}, ${selectors.GROUP_SIZE}`}`\n      )\n      .forEach((clickable) => {\n        clickable.addEventListener(\n          'click',\n          this._handleToggleGroupClick.bind(this)\n        )\n      })\n  }\n\n  /**\n   * Handler que trata do evento de click no grupo\n   * @param {object} event - Objeto Event\n   * @private\n   */\n  _handleToggleGroupClick(event) {\n    const element = this._getParentElementByClass(\n      event.currentTarget,\n      'br-item'\n    )\n    if (element.classList.contains('open')) {\n      element.classList.remove('open')\n      element.nextElementSibling\n        .querySelectorAll(selectors.BR_SWITCH)\n        .forEach((check) => {\n          check.setAttribute('tabindex', -1)\n        })\n      this._setGroupAttributes(element, 'Expandir')\n      this._toggleIcon(element, 'fa-angle-up', 'fa-angle-down')\n    } else {\n      element.classList.add('open')\n      element.nextElementSibling\n        .querySelectorAll(selectors.BR_SWITCH)\n        .forEach((check) => {\n          check.setAttribute('tabindex', 0)\n        })\n      this._setGroupAttributes(element, 'Retrair')\n      this._toggleIcon(element, 'fa-angle-down', 'fa-angle-up')\n      this._scrollUp(element)\n    }\n  }\n\n  /**\n   * Trata do comportamento do grupo de checkboxes do cookiebar\n   * @private\n   */\n  _setCheckboxBehavior() {\n    this.component\n      .querySelectorAll(selectors.PARENT_CHECKBOX)\n      .forEach((trigger) => {\n        this.checkgroupBehavior = new Checkgroup(trigger)\n        this.checkgroupBehavior.setBehavior()\n      })\n  }\n\n  /**\n   * Trata da seleção dos checkboxes\n   * @private\n   */\n  _setSelectionBehavior() {\n    this.component.querySelectorAll(selectors.CHECKBOX).forEach((checkbox) => {\n      checkbox.addEventListener('change', this._controlSelection.bind(this))\n    })\n  }\n\n  /**\n   * Handler para o evento change na seleção dos checkboxes\n   * @param {object} event - Objeto eventDOM\n   * @private\n   */\n  _controlSelection(event) {\n    const segment = event.currentTarget.id.split('-')\n    switch (segment[1]) {\n      case 'all':\n        this._setCheckAllBehavior(event.currentTarget)\n        break\n      case 'group':\n        this._setCheckgroupBehavior(event.currentTarget, segment[2])\n        break\n      case 'cookie':\n        this._setCheckCookieBehavior(\n          event.currentTarget,\n          segment[2],\n          segment[3]\n        )\n        break\n      default:\n    }\n  }\n\n  /**\n   * Trata a seleção do checkbox geral\n   * @param {object} checkbox - Elemento DOM que represeta um checkbox geral\n   * @private\n   */\n  _setCheckAllBehavior(checkbox) {\n    this.data.selectAll = checkbox.checked\n    this.data.allIndeterminated = checkbox.hasAttribute('indeterminate')\n      ? true\n      : false\n    this._displayBroadAlertMessage()\n  }\n\n  /**\n   * Trata da seleção do checkbox de grupo\n   * @param {object} checkbox - Elemento DOM que represta um checkbox de grupo\n   * @param {number} groupIndex - Índice do grupo\n   * @private\n   */\n  _setCheckgroupBehavior(checkbox, groupIndex) {\n    this.data.cookieGroups[groupIndex].groupSelected = checkbox.checked\n    this.data.cookieGroups[groupIndex].groupIndeterminated =\n      checkbox.hasAttribute('indeterminate') ? true : false\n    this.data.cookieGroups[groupIndex].cookieList.forEach(\n      (cookieData, cookieIndex) => {\n        if (!cookieData.cookieOptOut) {\n          cookieData.cookieSelected = checkbox.checked\n          this._displayCookieAlertMessage(groupIndex, cookieIndex)\n        }\n      }\n    )\n    this._displayGroupAlertMessage(groupIndex)\n  }\n\n  /**\n   * Trata da seleção do checkbox de cookie\n   * @param {object} checkbox - Elemento DOM que represeta um checkbox de cookie\n   * @param {number} groupIndex - Índice do grupo\n   * @param {number} cookieIndex - Índicd do cookie dentro do grupo\n   * @private\n   */\n  _setCheckCookieBehavior(checkbox, groupIndex, cookieIndex) {\n    this.data.cookieGroups[groupIndex].cookieList[cookieIndex].cookieSelected =\n      checkbox.checked\n    this._displayCookieAlertMessage(groupIndex, cookieIndex)\n  }\n\n  /**\n   * Controla a apresentação da mensagem geral\n   * @private\n   */\n  _displayBroadAlertMessage() {\n    this.component\n      .querySelectorAll(selectors.BROAD_ALERT)\n      .forEach((broadAlert) => {\n        if (\n          this.data.allAlertMessage &&\n          (!this.data.selectAll || this.data.allIndeterminated)\n        ) {\n          broadAlert.classList.remove('d-none')\n        } else {\n          broadAlert.classList.add('d-none')\n        }\n      })\n  }\n\n  /**\n   * Controla a apresentação da mensagem de grupo\n   * @param {number} groupIndex - Índice do grupo\n   * @private\n   */\n  _displayGroupAlertMessage(groupIndex) {\n    const group = this.component.querySelectorAll(selectors.GROUP_INFO)[\n      groupIndex\n    ]\n    group.querySelectorAll(selectors.GROUP_ALERT).forEach((groupAlert) => {\n      if (\n        this.data.cookieGroups[groupIndex].groupAlertMessage &&\n        (!this.data.cookieGroups[groupIndex].groupSelected ||\n          this.data.cookieGroups[groupIndex].groupIndeterminated)\n      ) {\n        groupAlert.classList.remove('d-none')\n      } else {\n        groupAlert.classList.add('d-none')\n      }\n    })\n  }\n\n  /**\n   * Controla a apresentação da mensagem de cookie\n   * @param {number} groupIndex - Índice do grupo\n   * @param {number} cookieIndex - Índice do cookie dentro do grupo\n   */\n  _displayCookieAlertMessage(groupIndex, cookieIndex) {\n    const group = this.component.querySelectorAll(selectors.GROUP_INFO)[\n      groupIndex\n    ]\n    const cookie = group.nextElementSibling.querySelectorAll(\n      selectors.COOKIE_CARD\n    )[cookieIndex]\n    cookie.querySelectorAll(selectors.COOKIE_ALERT).forEach((cookieAlert) => {\n      if (\n        this.data.cookieGroups[groupIndex].cookieList[cookieIndex]\n          .alertMessage &&\n        !this.data.cookieGroups[groupIndex].cookieList[cookieIndex]\n          .cookieSelected\n      ) {\n        cookieAlert.classList.remove('d-none')\n      } else {\n        cookieAlert.classList.add('d-none')\n      }\n    })\n  }\n\n  /**\n   * Busca um elemento DOM pai com uma determinada classe\n   * @param {object} element - Elemento DOM\n   * @param {string} className - Nome de uma classe para busca\n   * @returns {object} - Elemento DOM representando que contém uma determinada classe\n   * @private\n   */\n  _getParentElementByClass(element, className) {\n    parent = element.parentNode\n    while (!parent.classList.contains(className)) {\n      parent = parent.parentNode\n    }\n    return parent\n  }\n\n  /**\n   * Troca a classe do icone\n   * @param {object} element - Elemento DOM referente ao icone\n   * @param {string} oldIcon - Classe do icone que será retirada\n   * @param {string} newIcon - Classe do icone que será incluido\n   * @private\n   */\n  _toggleIcon(element, oldIcon, newIcon) {\n    element.querySelectorAll(selectors.BUTTON_ICON).forEach((icon) => {\n      icon.classList.remove(oldIcon)\n      icon.classList.add(newIcon)\n    })\n  }\n\n  /**\n   * Trata a label do atributo title e aria-label\n   * @param {object} element - Elemento DOM referente ao grupo\n   * @param {string} label - Label para o title e aria-label\n   * @private\n   */\n  _setGroupAttributes(element, label) {\n    element\n      .querySelectorAll(\n        `${`${selectors.GROUP_BUTTON}, ${selectors.GROUP_NAME}, ${selectors.COOKIES_CHECKED}, ${selectors.GROUP_SIZE}`}`\n      )\n      .forEach((item) => {\n        item.setAttribute('title', label)\n        item.setAttribute('aria-label', label)\n      })\n  }\n\n  /**\n   * Trata a rolagem da tela do grupo de cookies aberto\n   * @param {object} element - Elemento DOM que representa a grupo de cookies\n   * @private\n   */\n  _scrollUp(element) {\n    setTimeout(() => {\n      this.component.querySelectorAll(selectors.WRAPPER).forEach(() => {\n        setTimeout(() => {\n          element.scrollIntoView({\n            behavior: 'smooth',\n            block: 'start',\n          })\n        }, 150)\n      }, 5000)\n    })\n  }\n\n  /**\n   * Mostra o cookiebar na tela com foco e no modo escolhido\n   * @private\n   */\n  _showCookiebar() {\n    this.component.classList.remove('d-none')\n    this.component.focus()\n    switch (this.mode) {\n      case 'open':\n        this.component.classList.remove('default')\n        this.component\n          .querySelectorAll(selectors.POLITICS_BUTTON)\n          .forEach((button) => {\n            button.classList.add('d-none')\n          })\n        document.body.style.overflowY = 'hidden'\n        this._setOpenView()\n      default:\n    }\n  }\n\n  /**\n   * Oculta o cookiebar na tela\n   * @private\n   */\n  _hideCookiebar() {\n    this.component.classList.add('d-none')\n  }\n\n  /**\n   * Configura a altura da parte rolável do cookiebar de acordo com a altura da janela\n   * @private\n   */\n  _setOpenView() {\n    const wrapper = this.component.querySelector(selectors.WRAPPER)\n    const containerFluid = this.component.querySelector(\n      selectors.CONTAINER_FLUID\n    )\n    const modalFooter = this.component.querySelector(selectors.MODAL_FOOTER)\n    const padding = window\n      .getComputedStyle(containerFluid, null)\n      .getPropertyValue('padding-top')\n      .match(/\\d+/)\n    const height = `${\n      window.innerHeight - padding * 2 - modalFooter.offsetHeight\n    }px`\n    wrapper.style.height = height\n  }\n\n  /**\n   * Configura a altura do cookiebar no modo default\n   * @private\n   */\n  _setDefaultView() {\n    this.component.querySelector(selectors.WRAPPER).removeAttribute('style')\n  }\n\n  /**\n   * Cria o JSON de saída do cookiebar\n   * @returns {string} - JSON de saída do cookiebar\n   * @private\n   */\n  _setOutputJSON() {\n    this.output = {}\n    this.output.selectAll = this.data.allIndeterminated\n      ? 'indeterminated'\n      : this.data.selectAll\n    this.output.cookieGroups = []\n    this.data.cookieGroups.forEach((groupData) => {\n      const cookies = []\n      groupData.cookieList.forEach((cookieData) => {\n        cookies.push({\n          cookieId: cookieData.cookieId,\n          cookieSelected: cookieData.cookieSelected,\n        })\n      })\n      this.output.cookieGroups.push({\n        cookieList: cookies,\n        groupId: groupData.groupId,\n        groupSelected: groupData.groupIndeterminated\n          ? 'indeterminated'\n          : groupData.groupSelected,\n      })\n    })\n    return JSON.stringify(this.output)\n  }\n\n  static createCookiebar(json, callback) {\n    const brCookiebar = document.createElement('div')\n    brCookiebar.classList.add('br-cookiebar', 'default', 'd-none')\n    brCookiebar.setAttribute('tabindex', 1)\n\n    document.body.appendChild(brCookiebar)\n\n    const params = {\n      callback,\n      component: brCookiebar,\n      json,\n      lang: 'pt-br',\n      mode: 'default',\n      name: 'br-cookiebar',\n    }\n\n    return new BRCookiebar(params)\n  }\n}\n"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","BRCookiebar","constructor","name","component","json","lang","mode","callback","this","data","CookiebarData","templates","CookiebarTemplates","_setUp","_buildCookiebar","_setBehavior","_showCookiebar","innerHTML","setGlobalContentArea","_setAcceptButtonBehavior","_setPoliticsButtonBehavior","_setCloseButtonBehavior","_setToggleGroupBehavior","_setCheckboxBehavior","_setSelectionBehavior","_setWindowResizeBehavior","acceptButton","querySelector","selectors","ACCEPT_BUTTON","addEventListener","_hideCookiebar","document","body","style","overflowY","_setOutputJSON","event","classList","contains","focus","_setActionButtonResponsive","querySelectorAll","POLITICS_BUTTON","forEach","politicsButton","add","remove","_setOpenView","CLOSE_BUTTON","closeButton","_setDefaultView","window","ACTION_BUTTONS","button","matchMedia","matches","GROUP_BUTTON","GROUP_NAME","COOKIES_CHECKED","GROUP_SIZE","clickable","_handleToggleGroupClick","bind","element","_getParentElementByClass","currentTarget","nextElementSibling","BR_SWITCH","check","setAttribute","_setGroupAttributes","_toggleIcon","_scrollUp","PARENT_CHECKBOX","trigger","checkgroupBehavior","Checkgroup","setBehavior","CHECKBOX","checkbox","_controlSelection","segment","id","split","_setCheckAllBehavior","_setCheckgroupBehavior","_setCheckCookieBehavior","selectAll","checked","allIndeterminated","hasAttribute","_displayBroadAlertMessage","groupIndex","cookieGroups","groupSelected","groupIndeterminated","cookieList","cookieData","cookieIndex","cookieOptOut","cookieSelected","_displayCookieAlertMessage","_displayGroupAlertMessage","BROAD_ALERT","broadAlert","allAlertMessage","group","GROUP_INFO","GROUP_ALERT","groupAlert","groupAlertMessage","cookie","COOKIE_CARD","COOKIE_ALERT","cookieAlert","alertMessage","className","parent","parentNode","oldIcon","newIcon","BUTTON_ICON","icon","label","item","setTimeout","WRAPPER","scrollIntoView","behavior","block","wrapper","containerFluid","CONTAINER_FLUID","modalFooter","MODAL_FOOTER","padding","getComputedStyle","getPropertyValue","match","height","innerHeight","offsetHeight","removeAttribute","output","groupData","cookies","push","cookieId","groupId","JSON","stringify","static","brCookiebar","createElement","appendChild","params"],"sourceRoot":""}